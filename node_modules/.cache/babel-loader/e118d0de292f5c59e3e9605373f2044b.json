{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      let data;\n\n      if (bookInCart) {\n        data = { ...bookInCart,\n          count: bookInCart.count + 1,\n          total: bookInCart.total + currentBook.price\n        };\n      } else {\n        data = {\n          id: currentBook.id,\n          name: currentBook.name,\n          count: 1,\n          total: currentBook.price\n        };\n      }\n\n      if (isBookInCartIndex < 0) {\n        return { ...state,\n          cartItems: [...state.cartItems, data],\n          orderTotal: state.orderTotal + data.total\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems.splice(0, isBookInCartIndex), data, ...state.cartItems.slice(isBookInCartIndex + 1)],\n          orderTotal: state.orderTotal + data.total\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","reducer","state","action","type","payload","ID","currentBook","find","book","id","isBookInCartIndex","findIndex","bookInCart","data","count","total","price","name","splice","slice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAGrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,qBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAFX;AAGHR,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAJX,OAAP;;AAOJ,SAAK,oBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB,CADJ,CAC+B;;AAC3B,YAAME,WAAW,GAAGL,KAAK,CAACN,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,EAArC,CAApB,CAFJ,CAEiE;;AAC7D,YAAMK,iBAAiB,GAAGT,KAAK,CAACH,SAAN,CAAgBa,SAAhB,CAA0BH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,EAA9C,CAA1B,CAHJ,CAGgF;;AAC5E,YAAMO,UAAU,GAAGX,KAAK,CAACH,SAAN,CAAgBY,iBAAhB,CAAnB,CAJJ,CAI0D;;AACtD,UAAIG,IAAJ;;AACA,UAAID,UAAJ,EAAgB;AACZC,QAAAA,IAAI,GAAG,EACH,GAAGD,UADA;AAEHE,UAAAA,KAAK,EAAEF,UAAU,CAACE,KAAX,GAAmB,CAFvB;AAGHC,UAAAA,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmBT,WAAW,CAACU;AAHnC,SAAP;AAKH,OAND,MAMO;AACHH,QAAAA,IAAI,GAAG;AACHJ,UAAAA,EAAE,EAAEH,WAAW,CAACG,EADb;AAEHQ,UAAAA,IAAI,EAAEX,WAAW,CAACW,IAFf;AAGHH,UAAAA,KAAK,EAAE,CAHJ;AAIHC,UAAAA,KAAK,EAAET,WAAW,CAACU;AAJhB,SAAP;AAMH;;AAED,UAAIN,iBAAiB,GAAG,CAAxB,EAA2B;AACvB,eAAO,EACH,GAAGT,KADA;AAEHH,UAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBe,IAArB,CAFR;AAGHd,UAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBc,IAAI,CAACE;AAHjC,SAAP;AAKH,OAND,MAMO;AACH,eAAO,EACH,GAAGd,KADA;AAEHH,UAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAN,CAAgBoB,MAAhB,CAAuB,CAAvB,EAA0BR,iBAA1B,CAAJ,EAAkDG,IAAlD,EAAwD,GAAGZ,KAAK,CAACH,SAAN,CAAgBqB,KAAhB,CAAsBT,iBAAiB,GAAG,CAA1C,CAA3D,CAFR;AAGHX,UAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBc,IAAI,CAACE;AAHjC,SAAP;AAKH;;AAML;AACI,aAAOd,KAAP;AAlER;AAoEH,CAvEM","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0\n}\n\nexport const reducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            let data;\n            if (bookInCart) {\n                data = {\n                    ...bookInCart,\n                    count: bookInCart.count + 1,\n                    total: bookInCart.total + currentBook.price,\n                }\n            } else {\n                data = {\n                    id: currentBook.id,\n                    name: currentBook.name,\n                    count: 1,\n                    total: currentBook.price,\n                }\n            }\n\n            if (isBookInCartIndex < 0) {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, data],\n                    orderTotal: state.orderTotal + data.total\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems.splice(0, isBookInCartIndex), data, ...state.cartItems.slice(isBookInCartIndex + 1)],\n                    orderTotal: state.orderTotal + data.total\n                }\n            }\n\n\n\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}