{"ast":null,"code":"const booksLoaded = payload => ({\n  type: 'FETCH_BOOKS_SUCCESS',\n  payload\n});\n\nconst booksRequested = _ => ({\n  type: 'FETCH_BOOKS_REQUEST'\n});\n\nconst booksError = payload => ({\n  type: 'FETCH_BOOKS_FAILURE',\n  payload\n});\n\nexport const bookAddedToCart = payload => ({\n  type: 'BOOK_ADDED_TO_CART',\n  payload\n});\nexport const booksDeletedFromCart = payload => ({});\nexport const fetchBooks = (BookStoreService, dispatch) => () => {\n  dispatch(booksRequested()); // показать спиннер\n\n  BookStoreService.getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)));\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/actions/index.js"],"names":["booksLoaded","payload","type","booksRequested","_","booksError","bookAddedToCart","booksDeletedFromCart","fetchBooks","BookStoreService","dispatch","getBooks","then","data","catch","error"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,KAAK;AAACC,EAAAA,IAAI,EAAE,qBAAP;AAA8BD,EAAAA;AAA9B,CAAL,CAA3B;;AACA,MAAME,cAAc,GAAGC,CAAC,KAAK;AAACF,EAAAA,IAAI,EAAE;AAAP,CAAL,CAAxB;;AACA,MAAMG,UAAU,GAAGJ,OAAO,KAAK;AAACC,EAAAA,IAAI,EAAE,qBAAP;AAA8BD,EAAAA;AAA9B,CAAL,CAA1B;;AACA,OAAO,MAAMK,eAAe,GAAGL,OAAO,KAAK;AAACC,EAAAA,IAAI,EAAE,oBAAP;AAA6BD,EAAAA;AAA7B,CAAL,CAA/B;AACP,OAAO,MAAMM,oBAAoB,GAAGN,OAAO,KAAK,EAAL,CAApC;AACP,OAAO,MAAMO,UAAU,GAAG,CAACC,gBAAD,EAAmBC,QAAnB,KAAgC,MAAM;AAC5DA,EAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR,CAD4D,CAChC;;AAC5BM,EAAAA,gBAAgB,CAACE,QAAjB,GAA4BC,IAA5B,CAAiCC,IAAI,IAAIH,QAAQ,CAACV,WAAW,CAACa,IAAD,CAAZ,CAAjD,EAAsEC,KAAtE,CAA4EC,KAAK,IAAIL,QAAQ,CAACL,UAAU,CAACU,KAAD,CAAX,CAA7F;AACH,CAHM","sourcesContent":["const booksLoaded = payload => ({type: 'FETCH_BOOKS_SUCCESS', payload});\nconst booksRequested = _ => ({type: 'FETCH_BOOKS_REQUEST'});\nconst booksError = payload => ({type: 'FETCH_BOOKS_FAILURE', payload});\nexport const bookAddedToCart = payload => ({type: 'BOOK_ADDED_TO_CART', payload})\nexport const booksDeletedFromCart = payload => ({})\nexport const fetchBooks = (BookStoreService, dispatch) => () => {\n    dispatch(booksRequested()); // показать спиннер\n    BookStoreService.getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)))\n}\n\n"]},"metadata":{},"sourceType":"module"}