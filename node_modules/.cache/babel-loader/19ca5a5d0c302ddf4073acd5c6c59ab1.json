{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartID = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartID]; // index || undefined\n\n      let data;\n\n      if (bookInCart) {\n        data = { ...bookInCart,\n          count: bookInCart1,\n          total: currentBook.price\n        };\n      } else {\n        data = {\n          id: currentBook.id,\n          name: currentBook.name,\n          count: 1,\n          total: currentBook.price\n        };\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems, data],\n        orderTotal: state.orderTotal + data.total\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","reducer","state","action","type","payload","ID","currentBook","find","book","id","isBookInCartID","findIndex","bookInCart","data","count","bookInCart1","total","price","name"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAGrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,qBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAFX;AAGHR,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAJX,OAAP;;AAOJ,SAAK,oBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB,CADJ,CAC+B;;AAC3B,YAAME,WAAW,GAAGL,KAAK,CAACN,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,EAArC,CAApB,CAFJ,CAEiE;;AAC7D,YAAMK,cAAc,GAAGT,KAAK,CAACH,SAAN,CAAgBa,SAAhB,CAA0BH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,EAA9C,CAAvB,CAHJ,CAG6E;;AACzE,YAAMO,UAAU,GAAGX,KAAK,CAACH,SAAN,CAAgBY,cAAhB,CAAnB,CAJJ,CAIuD;;AACnD,UAAIG,IAAJ;;AACA,UAAID,UAAJ,EAAgB;AACZC,QAAAA,IAAI,GAAG,EACH,GAAGD,UADA;AAEHE,UAAAA,KAAK,EAAEC,WAFJ;AAGHC,UAAAA,KAAK,EAAEV,WAAW,CAACW;AAHhB,SAAP;AAKH,OAND,MAMO;AACHJ,QAAAA,IAAI,GAAG;AACHJ,UAAAA,EAAE,EAAEH,WAAW,CAACG,EADb;AAEHS,UAAAA,IAAI,EAAEZ,WAAW,CAACY,IAFf;AAGHJ,UAAAA,KAAK,EAAE,CAHJ;AAIHE,UAAAA,KAAK,EAAEV,WAAW,CAACW;AAJhB,SAAP;AAMH;;AAED,aAAO,EACH,GAAGhB,KADA;AAEHH,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBe,IAArB,CAFR;AAGHd,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBc,IAAI,CAACG;AAHjC,OAAP;;AAMJ;AACI,aAAOf,KAAP;AAtDR;AAwDH,CA3DM","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0\n}\n\nexport const reducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartID = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartID] // index || undefined\n            let data;\n            if (bookInCart) {\n                data = {\n                    ...bookInCart,\n                    count: bookInCart1,\n                    total: currentBook.price,\n                }\n            } else {\n                data = {\n                    id: currentBook.id,\n                    name: currentBook.name,\n                    count: 1,\n                    total: currentBook.price,\n                }\n            }\n\n            return {\n                ...state,\n                cartItems: [...state.cartItems, data],\n                orderTotal: state.orderTotal + data.total\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}