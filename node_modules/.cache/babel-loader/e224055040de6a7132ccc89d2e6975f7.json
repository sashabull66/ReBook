{"ast":null,"code":"const initialState = {\n  bookList: {\n    books: [],\n    loading: true,\n    error: null\n  },\n  shoppingCart: {\n    cartItems: [],\n    orderTotal: 0,\n    cartItemsTotal: 0\n  }\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nconst updateCartItemsCountTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.count, 0);\n};\n\nconst updateBookList = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst updateShoppingCart = (state, action) => {\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal;\n\n      if (getCount === 0) {\n        newCarts = newCarts.filter(({\n          id\n        }) => id !== bookID);\n      } else {\n        getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n        deletedBooksGroup.count = getCount;\n        deletedBooksGroup.total -= getTotal;\n      }\n\n      return { ...state,\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","bookList","books","loading","error","shoppingCart","cartItems","orderTotal","cartItemsTotal","updateCartItems","item","index","slice","updateCartItem","book","id","name","count","total","price","updateOrderTotal","reduce","finish","element","updateCartItemsCountTotal","updateBookList","state","action","type","payload","updateShoppingCart","ID","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data","newList","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal","reducer"],"mappings":"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","sourcesContent":["const initialState = {\n    bookList: {\n        books: [],\n        loading: true,\n        error: null,\n    },\n\n    shoppingCart: {\n        cartItems: [],\n        orderTotal: 0,\n        cartItemsTotal: 0\n    }\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\nconst updateOrderTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\nconst updateCartItemsCountTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.count, 0)\n}\n\nconst updateBookList = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\nconst updateShoppingCart = (state, action) => {\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal;\n            if (getCount === 0) {\n                newCarts = newCarts.filter(({id}) => id !== bookID)\n            } else {\n                getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            }\n            return {\n                ...state,\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n\n        default:return state\n    }\n}\n\nexport const reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}