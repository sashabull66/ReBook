{"ast":null,"code":"const booListInitialState = {\n  books: [],\n  loading: true,\n  error: null\n};\nexport const bookListReducer = (state = booListInitialState, action) => {\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal;\n\n      if (getCount === 0) {\n        newCarts = newCarts.filter(({\n          id\n        }) => id !== bookID);\n      } else {\n        getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n        deletedBooksGroup.count = getCount;\n        deletedBooksGroup.total -= getTotal;\n      }\n\n      return { ...state,\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/bookListReducer.js"],"names":["booListInitialState","books","loading","error","bookListReducer","state","action","type","ID","payload","currentBook","find","book","id","isBookInCartIndex","cartItems","findIndex","bookInCart","data","updateCartItem","newList","updateCartItems","orderTotal","updateOrderTotal","cartItemsTotal","updateCartItemsCountTotal","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","count","getTotal","total"],"mappings":"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","sourcesContent":["const booListInitialState = {\n    books: [],\n    loading: true,\n    error: null,\n}\n\nexport const bookListReducer = (state = booListInitialState, action) => {\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal;\n            if (getCount === 0) {\n                newCarts = newCarts.filter(({id}) => id !== bookID)\n            } else {\n                getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            }\n            return {\n                ...state,\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}