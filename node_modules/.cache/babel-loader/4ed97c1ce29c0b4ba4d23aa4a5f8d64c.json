{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload;\n      const isBookInCart = state.cartItems.find(book => book.id === ID);\n\n      if (isBookInCart) {\n        const {\n          total,\n          count\n        } = { ...isBookInCart\n        };\n        const currentPrise = total;\n        const newItem = { ...isBookInCart\n        };\n        newItem.total = newItem.total / newItem.count * 2;\n        newItem.count = ++newItem.count;\n        const newList = state.cartItems.filter(book => book.id !== ID);\n        return { ...state,\n          cartItems: [...newList, newItem],\n          orderTotal: state.orderTotal + isBookInCart.total / isBookInCart.count\n        };\n      }\n\n      const currentBook = state.books.find(book => book.id === ID);\n      const data = {\n        id: currentBook.id,\n        name: currentBook.name,\n        count: 1,\n        total: currentBook.price\n      };\n      return { ...state,\n        cartItems: [...state.cartItems, data],\n        orderTotal: state.orderTotal + data.total\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","reducer","state","action","type","payload","ID","isBookInCart","find","book","id","total","count","currentPrise","newItem","newList","filter","currentBook","data","name","price"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAGrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,qBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAFX;AAGHR,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAJX,OAAP;;AAOJ,SAAK,oBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB;AAEA,YAAME,YAAY,GAAGL,KAAK,CAACH,SAAN,CAAgBS,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYJ,EAAvC,CAArB;;AACA,UAAIC,YAAJ,EAAkB;AACd,cAAM;AAACI,UAAAA,KAAD;AAAQC,UAAAA;AAAR,YAAiB,EAAC,GAAGL;AAAJ,SAAvB;AACA,cAAMM,YAAY,GAAGF,KAArB;AACA,cAAMG,OAAO,GAAG,EAAC,GAAGP;AAAJ,SAAhB;AACAO,QAAAA,OAAO,CAACH,KAAR,GAAgBG,OAAO,CAACH,KAAR,GAAgBG,OAAO,CAACF,KAAxB,GAAgC,CAAhD;AACAE,QAAAA,OAAO,CAACF,KAAR,GAAgB,EAAEE,OAAO,CAACF,KAA1B;AACA,cAAMG,OAAO,GAAGb,KAAK,CAACH,SAAN,CAAgBiB,MAAhB,CAAuBP,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYJ,EAAzC,CAAhB;AACA,eAAO,EACH,GAAGJ,KADA;AAEHH,UAAAA,SAAS,EAAE,CAAC,GAAGgB,OAAJ,EAAaD,OAAb,CAFR;AAGHd,UAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAoBO,YAAY,CAACI,KAAb,GAAqBJ,YAAY,CAACK;AAH/D,SAAP;AAKH;;AACD,YAAMK,WAAW,GAAGf,KAAK,CAACN,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYJ,EAAnC,CAApB;AACA,YAAMY,IAAI,GAAG;AACTR,QAAAA,EAAE,EAAEO,WAAW,CAACP,EADP;AAETS,QAAAA,IAAI,EAAEF,WAAW,CAACE,IAFT;AAGTP,QAAAA,KAAK,EAAE,CAHE;AAITD,QAAAA,KAAK,EAAEM,WAAW,CAACG;AAJV,OAAb;AAMA,aAAO,EACH,GAAGlB,KADA;AAEHH,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBmB,IAArB,CAFR;AAGHlB,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBkB,IAAI,CAACP;AAHjC,OAAP;;AAMJ;AACI,aAAOT,KAAP;AAzDR;AA2DH,CA9DM","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0\n}\n\nexport const reducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload;\n\n            const isBookInCart = state.cartItems.find(book=>book.id === ID)\n            if (isBookInCart) {\n                const {total, count} = {...isBookInCart}\n                const currentPrise = total\n                const newItem = {...isBookInCart}\n                newItem.total = newItem.total / newItem.count * 2\n                newItem.count = ++newItem.count\n                const newList = state.cartItems.filter(book=>book.id !== ID)\n                return {\n                    ...state,\n                    cartItems: [...newList, newItem],\n                    orderTotal: state.orderTotal + (isBookInCart.total / isBookInCart.count)\n                }\n            }\n            const currentBook = state.books.find(book=>book.id === ID)\n            const data = {\n                id: currentBook.id,\n                name: currentBook.name,\n                count: 1,\n                total: currentBook.price,\n            }\n            return {\n                ...state,\n                cartItems: [...state.cartItems, data],\n                orderTotal: state.orderTotal + data.total\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}