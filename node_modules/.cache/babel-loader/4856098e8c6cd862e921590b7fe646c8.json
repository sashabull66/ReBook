{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/redux-sandbox/src/components/BookList/BookList.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport { connect } from \"react-redux\";\nimport { WithBookStoreService } from \"../HOC/WithBookStoreService\";\nimport { bookAddedToCart, fetchBooks } from \"../../actions\";\nimport { compose } from \"../../utils/compose\";\nimport './BookList.css';\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    const {\n      fetchBooks\n    } = this.props;\n    fetchBooks();\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error,\n      onAddToCart\n    } = this.props;\n    if (error) return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this);\n    return loading && books.length === 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      onAddToCart: onAddToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst BookList = ({\n  books,\n  onAddToCart\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"book-list\",\n  children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(BookListItem, {\n      onAddToCart: onAddToCart,\n      book: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 107\n    }, this)\n  }, book.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 89\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 44\n}, this);\n\n_c = BookList;\n\nconst mapStateToProps = ({\n  bookList: {\n    books,\n    loading,\n    error\n  }\n}) => ({\n  books,\n  loading,\n  error\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n  fetchBooks: () => dispatch(fetchBooks(ownProps.BookStoreService)()),\n  onAddToCart: id => dispatch(bookAddedToCart(id))\n});\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/components/BookList/BookList.js"],"names":["React","Component","BookListItem","connect","WithBookStoreService","bookAddedToCart","fetchBooks","compose","Spinner","ErrorComponent","BookListContainer","componentDidMount","props","render","books","loading","error","onAddToCart","length","BookList","map","book","id","mapStateToProps","bookList","mapDispatchToProps","dispatch","ownProps","BookStoreService"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,6BAAnC;AACA,SAAQC,eAAR,EAAyBC,UAAzB,QAA0C,eAA1C;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,iBAAN,SAAgCT,SAAhC,CAA0C;AACtCU,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACL,MAAAA;AAAD,QAAe,KAAKM,KAA1B;AACAN,IAAAA,UAAU;AACb;;AAGDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKL,KAAlD;AACA,QAAII,KAAJ,EAAW,oBAAO,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOD,OAAO,IAAID,KAAK,CAACI,MAAN,KAAiB,CAA5B,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAwB,MAAA,WAAW,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAIH;;AAdqC;;AAiB1C,MAAME,QAAQ,GAAG,CAAC;AAACL,EAAAA,KAAD;AAAQG,EAAAA;AAAR,CAAD,kBAA0B;AAAI,EAAA,SAAS,EAAC,WAAd;AAAA,YAA2BH,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI;AAAA,2BAAkB,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEJ,WAA3B;AAAwC,MAAA,IAAI,EAAEI;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAlB,KAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,UAAlB;AAA3B;AAAA;AAAA;AAAA;AAAA,QAA3C;;KAAMH,Q;;AAEN,MAAMI,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAC;AAACV,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB;AAAV,CAAD,MAAyC;AAC7DF,EAAAA,KAD6D;AACtDC,EAAAA,OADsD;AAC7CC,EAAAA;AAD6C,CAAzC,CAAxB;;AAIA,MAAMS,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MAAyB;AAAE;AAClDrB,EAAAA,UAAU,EAAE,MAAKoB,QAAQ,CAACpB,UAAU,CAACqB,QAAQ,CAACC,gBAAV,CAAV,EAAD,CADuB;AAEhDX,EAAAA,WAAW,EAAGK,EAAD,IAAQI,QAAQ,CAACrB,eAAe,CAACiB,EAAD,CAAhB;AAFmB,CAAzB,CAA3B;;AAKA,eAAef,OAAO,CAACH,oBAAoB,EAArB,EAAyBD,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAhC,CAAP,CAA8Ef,iBAA9E,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport {connect} from \"react-redux\";\nimport {WithBookStoreService} from \"../HOC/WithBookStoreService\";\nimport {bookAddedToCart, fetchBooks} from \"../../actions\";\nimport {compose} from \"../../utils/compose\";\nimport './BookList.css'\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\n\nclass BookListContainer extends Component {\n    componentDidMount() {\n        const {fetchBooks} = this.props\n        fetchBooks()\n    }\n\n\n    render() {\n        const {books, loading, error, onAddToCart} = this.props\n        if (error) return <ErrorComponent message={error}/>\n        return loading && books.length === 0 ?\n            <Spinner/>\n            :\n            <BookList books={books} onAddToCart={onAddToCart}/>\n    }\n}\n\nconst BookList = ({books, onAddToCart}) => <ul className='book-list'>{books.map(book => <li key={book.id}><BookListItem onAddToCart={onAddToCart} book={book}/></li>)}</ul>\n\nconst mapStateToProps = ({bookList:{books, loading, error}}) => ({\n    books, loading, error\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({ // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n    fetchBooks: ()=> dispatch(fetchBooks(ownProps.BookStoreService)()),\n    onAddToCart: (id) => dispatch(bookAddedToCart(id))\n})\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);\n"]},"metadata":{},"sourceType":"module"}