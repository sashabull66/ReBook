{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = item => {};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      let data;\n\n      if (bookInCart) {\n        data = { ...bookInCart,\n          count: bookInCart.count + 1,\n          total: bookInCart.total + bookInCart.total / bookInCart.count\n        };\n      } else {\n        data = {\n          id: currentBook.id,\n          name: currentBook.name,\n          count: 1,\n          total: currentBook.price\n        };\n      }\n\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, data, isBookInCartIndex),\n        orderTotal: state.orderTotal + currentBook.price\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","index","slice","updateCartItem","reducer","state","action","type","payload","ID","currentBook","find","book","id","isBookInCartIndex","findIndex","bookInCart","data","count","total","name","price"],"mappings":"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","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (item) => {\n\n}\n\nexport const reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            let data;\n            if (bookInCart) {\n                data = {\n                    ...bookInCart,\n                    count: bookInCart.count + 1,\n                    total: bookInCart.total + (bookInCart.total / bookInCart.count),\n                }\n            } else {\n                data = {\n                    id: currentBook.id,\n                    name: currentBook.name,\n                    count: 1,\n                    total: currentBook.price,\n                }\n            }\n                return {\n                    ...state,\n                    cartItems: updateCartItems(state.cartItems, data, isBookInCartIndex),\n                    orderTotal: state.orderTotal + currentBook.price\n                }\n\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}