{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/redux-sandbox/src/components/BookList/BookList.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport { connect } from \"react-redux\";\nimport { WithBookStoreService } from \"../HOC/WithBookStoreService\";\nimport { booksError, booksLoaded, booksRequested } from \"../../actions\";\nimport { compose } from \"../../utils/compose\";\nimport './BookList.css';\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookList extends Component {\n  componentDidMount() {\n    const {\n      BookStoreService: {\n        getBooks\n      },\n      booksLoaded,\n      booksError\n    } = this.props;\n    getBooks().then(data => booksLoaded(data)).catch(error => booksError(error));\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error\n    } = this.props;\n    if (error) return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this);\n    return loading && books.length === 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(BookListItem, {\n          book: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 54\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => ({\n  books,\n  loading,\n  error\n}); //export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\n\n/*\nconst mapDispatchToProps = {\n    booksLoaded,\n    booksRequested,\n    booksError\n}\n */\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  fetchBooks: () => {\n    const {\n      BookStoreService: {\n        getBooks\n      }\n    } = ownProps;\n    dispatch(booksRequested());\n    getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)));\n  }\n});\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/components/BookList/BookList.js"],"names":["React","Component","BookListItem","connect","WithBookStoreService","booksError","booksLoaded","booksRequested","compose","Spinner","ErrorComponent","BookList","componentDidMount","BookStoreService","getBooks","props","then","data","catch","error","render","books","loading","length","map","book","id","mapStateToProps","mapDispatchToProps","dispatch","ownProps","fetchBooks"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,6BAAnC;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,cAAjC,QAAsD,eAAtD;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC7BW,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,gBAAgB,EAAE;AAACC,QAAAA;AAAD,OAAnB;AAA+BR,MAAAA,WAA/B;AAA4CD,MAAAA;AAA5C,QAA0D,KAAKU,KAArE;AACAD,IAAAA,QAAQ,GAAGE,IAAX,CAAgBC,IAAI,IAAIX,WAAW,CAACW,IAAD,CAAnC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAId,UAAU,CAACc,KAAD,CAApE;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBH,MAAAA;AAAjB,QAA0B,KAAKJ,KAArC;AACA,QAAII,KAAJ,EAAW,oBAAO,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOG,OAAO,IAAID,KAAK,CAACE,MAAN,KAAiB,CAA5B,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAAI;AAAA,+BAAkB,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AAAlB,SAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cAAlB;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAOH;;AAjB4B;;AAoBjC,MAAMC,eAAe,GAAG,CAAC;AAACN,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBH,EAAAA;AAAjB,CAAD,MAA8B;AAClDE,EAAAA,KADkD;AAC3CC,EAAAA,OAD2C;AAClCH,EAAAA;AADkC,CAA9B,CAAxB,C,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMS,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MAAyB;AAChDC,EAAAA,UAAU,EAAE,MAAM;AACd,UAAM;AAAClB,MAAAA,gBAAgB,EAAE;AAACC,QAAAA;AAAD;AAAnB,QAAiCgB,QAAvC;AACAD,IAAAA,QAAQ,CAACtB,cAAc,EAAf,CAAR;AACAO,IAAAA,QAAQ,GAAGE,IAAX,CAAgBC,IAAI,IAAIY,QAAQ,CAACvB,WAAW,CAACW,IAAD,CAAZ,CAAhC,EAAqDC,KAArD,CAA2DC,KAAK,IAAIU,QAAQ,CAACxB,UAAU,CAACc,KAAD,CAAX,CAA5E;AACH;AAL+C,CAAzB,CAA3B;;AAQA,eAAeX,OAAO,CAACJ,oBAAoB,EAArB,EAAyBD,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAAhC,CAAP,CAA8EjB,QAA9E,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport {connect} from \"react-redux\";\nimport {WithBookStoreService} from \"../HOC/WithBookStoreService\";\nimport {booksError, booksLoaded, booksRequested} from \"../../actions\";\nimport {compose} from \"../../utils/compose\";\nimport './BookList.css'\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\n\nclass BookList extends Component {\n    componentDidMount() {\n        const {BookStoreService: {getBooks}, booksLoaded, booksError} = this.props\n        getBooks().then(data => booksLoaded(data)).catch(error => booksError(error))\n    }\n\n\n    render() {\n        const {books, loading, error} = this.props\n        if (error) return <ErrorComponent message={error}/>\n        return loading && books.length === 0 ?\n            <Spinner/>\n            :\n            <ul className='book-list'>\n                {books.map(book => <li key={book.id}><BookListItem book={book}/></li>)}\n            </ul>\n            ;\n    }\n}\n\nconst mapStateToProps = ({books, loading, error}) => ({\n    books, loading, error\n})\n//export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\n/*\nconst mapDispatchToProps = {\n    booksLoaded,\n    booksRequested,\n    booksError\n}\n */\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    fetchBooks: () => {\n        const {BookStoreService: {getBooks}} = ownProps\n        dispatch(booksRequested());\n        getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)))\n    }\n})\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);\n"]},"metadata":{},"sourceType":"module"}