{"ast":null,"code":"const booListInitialState = {\n  books: [],\n  loading: true,\n  error: null\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item.count > 0 && item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nconst updateCartItemsCountTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.count, 0);\n};\n\nexport const bookListReducer = (state = booListInitialState, action) => {\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      console.log('aaa');\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal;\n\n      if (getCount === 0) {\n        newCarts = newCarts.filter(({\n          id\n        }) => id !== bookID);\n      } else {\n        getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n        deletedBooksGroup.count = getCount;\n        deletedBooksGroup.total -= getTotal;\n      }\n\n      return { ...state,\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/bookListReducer.js"],"names":["booListInitialState","books","loading","error","updateCartItems","cartItems","item","index","slice","count","updateCartItem","book","id","name","total","price","updateOrderTotal","reduce","finish","element","updateCartItemsCountTotal","bookListReducer","state","action","type","console","log","ID","payload","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data","newList","orderTotal","cartItemsTotal","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal"],"mappings":"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","sourcesContent":["const booListInitialState = {\n    books: [],\n    loading: true,\n    error: null,\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item.count > 0 && item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\n\nconst updateOrderTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\n\nconst updateCartItemsCountTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.count, 0)\n}\n\nexport const bookListReducer = (state = booListInitialState, action) => {\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART' :\n            console.log('aaa')\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal;\n            if (getCount === 0) {\n                newCarts = newCarts.filter(({id}) => id !== bookID)\n            } else {\n                getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            }\n            return {\n                ...state,\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}