{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0,\n  cartItemsTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  if (item.total === 0) item = null;\n  console.log(item);\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nconst updateCartItemsCountTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.count, 0);\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    /* count: count + 1,\n         total: book.price + total,*/\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n      deletedBooksGroup.count = getCount;\n      deletedBooksGroup.total -= getTotal;\n      return { ...state,\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","cartItemsTotal","updateCartItems","item","index","total","console","log","slice","updateCartItem","book","id","name","count","price","updateOrderTotal","reduce","finish","element","updateCartItemsCountTotal","reducer","state","action","type","payload","ID","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data","newList","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal"],"mappings":"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","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0,\n    cartItemsTotal: 0\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n   if (item.total === 0) item = null\n    console.log(item)\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\n\nconst updateOrderTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\n\nconst updateCartItemsCountTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.count, 0)\n}\n\nexport const reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n        /* count: count + 1,\n             total: book.price + total,*/\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            return {\n                ...state,\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}