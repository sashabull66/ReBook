{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item) => {\n  if (item) {\n    return { ...item,\n      count: item.count + 1,\n      total: item.total + item.total / item.count\n    };\n  } else {\n    return {\n      id: book.id,\n      name: book.name,\n      count: 1,\n      total: book.price\n    };\n  }\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, data, isBookInCartIndex),\n        orderTotal: state.orderTotal + currentBook.price\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","index","slice","updateCartItem","book","count","total","id","name","price","reducer","state","action","type","payload","ID","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACF,SAAD,EAAYG,IAAZ,EAAkBC,KAAlB,KAA4B;AAChD,MAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,WAAO,CACH,GAAGJ,SADA,EAEHG,IAFG,CAAP;AAIH;;AACD,SAAO,CACH,GAAGH,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmBD,KAAnB,CADA,EAEHD,IAFG,EAGH,GAAGH,SAAS,CAACK,KAAV,CAAgB,EAAED,KAAlB,CAHA,CAAP;AAKH,CAZD;;AAcA,MAAME,cAAc,GAAG,CAACC,IAAD,EAAOJ,IAAP,KAAgB;AAEnC,MAAIA,IAAJ,EAAU;AACN,WAAQ,EACJ,GAAGA,IADC;AAEJK,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,GAAa,CAFhB;AAGJC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,GAAcN,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACK;AAHnC,KAAR;AAKH,GAND,MAMO;AACH,WAAQ;AACJE,MAAAA,EAAE,EAAEH,IAAI,CAACG,EADL;AAEJC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFP;AAGJH,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,KAAK,EAAEF,IAAI,CAACK;AAJR,KAAR;AAMH;AACJ,CAhBD;;AAkBA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,qBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHjB,QAAAA,KAAK,EAAEkB,MAAM,CAACE,OAFX;AAGHnB,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHjB,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHjB,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAEgB,MAAM,CAACE;AAJX,OAAP;;AAOJ,SAAK,oBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB,CADJ,CAC+B;;AAC3B,YAAME,WAAW,GAAGL,KAAK,CAACjB,KAAN,CAAYuB,IAAZ,CAAiBb,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYQ,EAArC,CAApB,CAFJ,CAEiE;;AAC7D,YAAMG,iBAAiB,GAAGP,KAAK,CAACd,SAAN,CAAgBsB,SAAhB,CAA0Bf,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYQ,EAA9C,CAA1B,CAHJ,CAGgF;;AAC5E,YAAMK,UAAU,GAAGT,KAAK,CAACd,SAAN,CAAgBqB,iBAAhB,CAAnB,CAJJ,CAI0D;;AAGlD,aAAO,EACH,GAAGP,KADA;AAEHd,QAAAA,SAAS,EAAEE,eAAe,CAACY,KAAK,CAACd,SAAP,EAAkBwB,IAAlB,EAAwBH,iBAAxB,CAFvB;AAGHpB,QAAAA,UAAU,EAAEa,KAAK,CAACb,UAAN,GAAmBkB,WAAW,CAACP;AAHxC,OAAP;;AAQR;AACI,aAAOE,KAAP;AA1CR;AA4CH,CA9CM","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (book, item) => {\n    \n    if (item) {\n        return  {\n            ...item,\n            count: item.count + 1,\n            total: item.total + (item.total / item.count),\n        }\n    } else {\n        return  {\n            id: book.id,\n            name: book.name,\n            count: 1,\n            total: book.price,\n        }\n    }\n}\n\nexport const reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n\n\n                return {\n                    ...state,\n                    cartItems: updateCartItems(state.cartItems, data, isBookInCartIndex),\n                    orderTotal: state.orderTotal + currentBook.price\n                }\n\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}