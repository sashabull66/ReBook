{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/redux-sandbox/src/components/BookList/BookList.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport { connect } from \"react-redux\";\nimport { WithBookStoreService } from \"../HOC/WithBookStoreService\";\nimport { fetchBooks } from \"../../actions\";\nimport { compose } from \"../../utils/compose\";\nimport './BookList.css';\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    const {\n      fetchBooks\n    } = this.props;\n    fetchBooks();\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error\n    } = this.props;\n    if (error) return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this);\n    return loading && books.length === 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      onAddToCart: console.log\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst BookList = ({\n  books,\n  onAddToCart\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"book-list\",\n  children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(BookListItem, {\n      onAddToCart: onAddToCart,\n      book: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 107\n    }, this)\n  }, book.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 89\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 44\n}, this);\n\n_c = BookList;\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => ({\n  books,\n  loading,\n  error\n}); //export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\n\n/* V1\nconst mapDispatchToProps = {\n    booksLoaded,\n    booksRequested,\n    booksError\n}\n */\n\n/* V2\nconst mapDispatchToProps = (dispatch, ownProps) => ({ // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n    fetchBooks: () => {\n        const {BookStoreService: {getBooks}} = ownProps\n        dispatch(booksRequested()); // показать спиннер\n        getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)))\n    }\n})\n */\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n  fetchBooks: fetchBooks(ownProps.BookStoreService, dispatch)\n});\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/components/BookList/BookList.js"],"names":["React","Component","BookListItem","connect","WithBookStoreService","fetchBooks","compose","Spinner","ErrorComponent","BookListContainer","componentDidMount","props","render","books","loading","error","length","console","log","BookList","onAddToCart","map","book","id","mapStateToProps","mapDispatchToProps","dispatch","ownProps","BookStoreService"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,6BAAnC;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACtCS,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACL,MAAAA;AAAD,QAAe,KAAKM,KAA1B;AACAN,IAAAA,UAAU;AACb;;AAGDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAA0B,KAAKJ,KAArC;AACA,QAAII,KAAJ,EAAW,oBAAO,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOD,OAAO,IAAID,KAAK,CAACG,MAAN,KAAiB,CAA5B,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAwB,MAAA,WAAW,EAAEI,OAAO,CAACC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAIH;;AAdqC;;AAiB1C,MAAMC,QAAQ,GAAG,CAAC;AAACN,EAAAA,KAAD;AAAQO,EAAAA;AAAR,CAAD,kBAA0B;AAAI,EAAA,SAAS,EAAC,WAAd;AAAA,YAA2BP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBAAI;AAAA,2BAAkB,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEF,WAA3B;AAAwC,MAAA,IAAI,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAlB,KAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,UAAlB;AAA3B;AAAA;AAAA;AAAA;AAAA,QAA3C;;KAAMJ,Q;;AAEN,MAAMK,eAAe,GAAG,CAAC;AAACX,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,MAA8B;AAClDF,EAAAA,KADkD;AAC3CC,EAAAA,OAD2C;AAClCC,EAAAA;AADkC,CAA9B,CAAxB,C,CAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMU,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MAAyB;AAAE;AAClDtB,EAAAA,UAAU,EAAEA,UAAU,CAACsB,QAAQ,CAACC,gBAAV,EAA4BF,QAA5B;AAD0B,CAAzB,CAA3B;;AAIA,eAAepB,OAAO,CAACF,oBAAoB,EAArB,EAAyBD,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAhC,CAAP,CAA8EhB,iBAA9E,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport {connect} from \"react-redux\";\nimport {WithBookStoreService} from \"../HOC/WithBookStoreService\";\nimport {fetchBooks} from \"../../actions\";\nimport {compose} from \"../../utils/compose\";\nimport './BookList.css'\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\n\nclass BookListContainer extends Component {\n    componentDidMount() {\n        const {fetchBooks} = this.props\n        fetchBooks()\n    }\n\n\n    render() {\n        const {books, loading, error} = this.props\n        if (error) return <ErrorComponent message={error}/>\n        return loading && books.length === 0 ?\n            <Spinner/>\n            :\n            <BookList books={books} onAddToCart={console.log}/>\n    }\n}\n\nconst BookList = ({books, onAddToCart}) => <ul className='book-list'>{books.map(book => <li key={book.id}><BookListItem onAddToCart={onAddToCart} book={book}/></li>)}</ul>\n\nconst mapStateToProps = ({books, loading, error}) => ({\n    books, loading, error\n})\n//export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\n\n/* V1\nconst mapDispatchToProps = {\n    booksLoaded,\n    booksRequested,\n    booksError\n}\n */\n\n/* V2\nconst mapDispatchToProps = (dispatch, ownProps) => ({ // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n    fetchBooks: () => {\n        const {BookStoreService: {getBooks}} = ownProps\n        dispatch(booksRequested()); // показать спиннер\n        getBooks().then(data => dispatch(booksLoaded(data))).catch(error => dispatch(booksError(error)))\n    }\n})\n */\nconst mapDispatchToProps = (dispatch, ownProps) => ({ // эта функция в 2 параметр принимает все пропсы переданные из hoc ранее а также из компонент выше\n    fetchBooks: fetchBooks(ownProps.BookStoreService, dispatch)\n})\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);\n"]},"metadata":{},"sourceType":"module"}