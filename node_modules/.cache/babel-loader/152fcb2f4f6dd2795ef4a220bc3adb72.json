{"ast":null,"code":"const shoppingCartInitialState = {\n  cartItems: [],\n  orderTotal: 0,\n  cartItemsTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item.count > 0 && item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nconst updateCartItemsCountTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.count, 0);\n};\n\nexport const shoppingCartReducer = (state = shoppingCartInitialState, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    //bookList\n    //shoppingCart\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.bookList.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.shoppingCart.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.shoppingCart.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.shoppingCart.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal;\n\n      if (getCount === 0) {\n        newCarts = newCarts.filter(({\n          id\n        }) => id !== bookID);\n      } else {\n        getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n        deletedBooksGroup.count = getCount;\n        deletedBooksGroup.total -= getTotal;\n      }\n\n      return { ...state,\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/shoppingCartReducer.js"],"names":["shoppingCartInitialState","cartItems","orderTotal","cartItemsTotal","updateCartItems","item","index","slice","count","updateCartItem","book","id","name","total","price","updateOrderTotal","reduce","finish","element","updateCartItemsCountTotal","shoppingCartReducer","state","action","console","log","type","ID","payload","currentBook","bookList","books","find","isBookInCartIndex","shoppingCart","findIndex","bookInCart","data","newList","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal"],"mappings":"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","sourcesContent":["const shoppingCartInitialState = {\n    cartItems: [],\n    orderTotal: 0,\n    cartItemsTotal: 0\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item.count > 0 && item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\n\nconst updateOrderTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\n\nconst updateCartItemsCountTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.count, 0)\n}\n\nexport const shoppingCartReducer = (state = shoppingCartInitialState, action) => {\nconsole.log(state)\n    switch (action.type) {\n        //bookList\n//shoppingCart\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.bookList.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.shoppingCart.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.shoppingCart.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.shoppingCart.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal;\n            if (getCount === 0) {\n                newCarts = newCarts.filter(({id}) => id !== bookID)\n            } else {\n                getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            }\n            return {\n                ...state,\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n\n        default:\n            return state\n\n    }\n}"]},"metadata":{},"sourceType":"module"}