{"ast":null,"code":"const updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nconst updateCartItemsCountTotal = cartItems => {\n  return cartItems.reduce((finish, element) => finish + element.count, 0);\n};\n\nexport const updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0,\n      cartItemsTotal: 0\n    };\n  }\n\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      const {\n        bookList: {\n          books\n        },\n        shoppingCart: {\n          cartItems\n        }\n      } = state;\n      const ID = action.payload; // clicked id\n\n      const currentBook = books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(cartItems, data, isBookInCartIndex);\n      return {\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList),\n        cartItemsTotal: updateCartItemsCountTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.shoppingCart.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return {\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList),\n        cartItemsTotal: updateCartItemsCountTotal(newCartList)\n      };\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      let newCarts = [...state.shoppingCart.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      let getTotal;\n\n      if (getCount === 0) {\n        newCarts = newCarts.filter(({\n          id\n        }) => id !== bookID);\n      } else {\n        getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n        deletedBooksGroup.count = getCount;\n        deletedBooksGroup.total -= getTotal;\n      }\n\n      return {\n        cartItems: newCarts,\n        orderTotal: updateOrderTotal(newCarts),\n        cartItemsTotal: updateCartItemsCountTotal(newCarts)\n      };\n\n    default:\n      return state.shoppingCart;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/shopingCart.js"],"names":["updateCartItems","cartItems","item","index","slice","updateCartItem","book","id","name","count","total","price","updateOrderTotal","reduce","finish","element","updateCartItemsCountTotal","updateShoppingCart","state","action","undefined","orderTotal","cartItemsTotal","type","bookList","books","shoppingCart","ID","payload","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data","newList","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal"],"mappings":"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","sourcesContent":["const updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\nconst updateOrderTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\nconst updateCartItemsCountTotal = (cartItems) => {\n    return cartItems.reduce((finish, element) => finish + element.count, 0)\n}\n\n\nexport const updateShoppingCart = (state, action) => {\n    if (state === undefined) {\n        return {\n            cartItems: [],\n            orderTotal: 0,\n            cartItemsTotal: 0\n        }\n    }\n\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART' :\n            const {bookList: {books}, shoppingCart: {cartItems}} = state\n            const ID = action.payload; // clicked id\n            const currentBook = books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(cartItems, data, isBookInCartIndex)\n            return {\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList),\n                cartItemsTotal: updateCartItemsCountTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.shoppingCart.cartItems.filter(({id}) => id !== booksID);\n            return {\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList),\n                cartItemsTotal: updateCartItemsCountTotal(newCartList)\n            }\n\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            let newCarts = [...state.shoppingCart.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1;\n            let getTotal;\n            if (getCount === 0) {\n                newCarts = newCarts.filter(({id}) => id !== bookID)\n            } else {\n                getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n                deletedBooksGroup.count = getCount\n                deletedBooksGroup.total -= getTotal\n            }\n            return {\n                cartItems: newCarts,\n                orderTotal: updateOrderTotal(newCarts),\n                cartItemsTotal: updateCartItemsCountTotal(newCarts)\n            }\n\n        default :\n            return state.shoppingCart\n    }\n}"]},"metadata":{},"sourceType":"module"}