{"ast":null,"code":"import { bindActionCreators, createStore } from \"redux\";\nconst initialState = 0;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return state + 1;\n\n    case 'GET':\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nconst GET = () => {\n  return {\n    type: 'GET'\n  };\n};\n\n_c = GET;\n\nconst ADD = () => {\n  return {\n    type: 'ADD'\n  };\n};\n\n_c2 = ADD;\nconst store = createStore(reducer);\nbindActionCreators({}, store.dispatch);\ndocument.querySelector('#add').addEventListener('click', () => store.dispatch(ADD()));\ndocument.querySelector('#get').addEventListener('click', () => store.dispatch(GET()));\ndocument.querySelector('#counter').innerHTML = store.getState();\n\nconst updateH2 = () => {\n  document.querySelector('#counter').innerHTML = store.getState();\n};\n\nstore.subscribe(updateH2);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GET\");\n$RefreshReg$(_c2, \"ADD\");","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/index.js"],"names":["bindActionCreators","createStore","initialState","reducer","state","action","type","GET","ADD","store","dispatch","document","querySelector","addEventListener","innerHTML","getState","updateH2","subscribe"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,WAA5B,QAA8C,OAA9C;AAGA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,KAAL;AACI,aAAOA,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH,CATD;;AAUA,MAAMG,GAAG,GAAG,MAAM;AACd,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;KAAMC,G;;AAKN,MAAMC,GAAG,GAAG,MAAM;AACd,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;MAAME,G;AASN,MAAMC,KAAK,GAAGR,WAAW,CAACE,OAAD,CAAzB;AAEAH,kBAAkB,CAAC,EAAD,EAEfS,KAAK,CAACC,QAFS,CAAlB;AAKAC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,gBAA/B,CAAgD,OAAhD,EAAyD,MAAIJ,KAAK,CAACC,QAAN,CAAeF,GAAG,EAAlB,CAA7D;AACAG,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,gBAA/B,CAAgD,OAAhD,EAAyD,MAAIJ,KAAK,CAACC,QAAN,CAAeH,GAAG,EAAlB,CAA7D;AACAI,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCE,SAAnC,GAA+CL,KAAK,CAACM,QAAN,EAA/C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnBL,EAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCE,SAAnC,GAA+CL,KAAK,CAACM,QAAN,EAA/C;AACH,CAFD;;AAIAN,KAAK,CAACQ,SAAN,CAAgBD,QAAhB","sourcesContent":["import {bindActionCreators, createStore} from \"redux\";\n\n\nconst initialState = 0\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD' :\n            return state + 1\n        case 'GET' :\n            return state - 1\n        default:\n            return state\n    }\n}\nconst GET = () => {\n    return {\n        type: 'GET'\n    }\n}\nconst ADD = () => {\n    return {\n        type: 'ADD'\n    }\n}\n\n\n\n\nconst store = createStore(reducer)\n\nbindActionCreators({\n    \n} ,store.dispatch)\n\n\ndocument.querySelector('#add').addEventListener('click', ()=>store.dispatch(ADD()) )\ndocument.querySelector('#get').addEventListener('click', ()=>store.dispatch(GET()) )\ndocument.querySelector('#counter').innerHTML = store.getState()\n\nconst updateH2 = () => {\n    document.querySelector('#counter').innerHTML = store.getState()\n}\n\nstore.subscribe(updateH2)"]},"metadata":{},"sourceType":"module"}