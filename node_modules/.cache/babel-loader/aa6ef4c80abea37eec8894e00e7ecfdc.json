{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/redux-sandbox/src/components/BookList/BookList.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport { connect } from \"react-redux\";\nimport { WithBookStoreService } from \"../HOC/WithBookStoreService\";\nimport { booksLoaded, booksRequested } from \"../../actions\";\nimport { compose } from \"../../utils/compose\";\nimport './BookList.css';\nimport Spinner from \"../Spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookList extends Component {\n  componentDidMount() {\n    const {\n      BookStoreService: {\n        getBooks\n      },\n      booksLoaded\n    } = this.props;\n    getBooks().then(data => booksLoaded(data));\n  }\n\n  componentWillUnmount() {\n    const {\n      booksRequested\n    } = this.props;\n  }\n\n  render() {\n    const {\n      books,\n      loading\n    } = this.props;\n    return loading && books.length === 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(BookListItem, {\n          book: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 52\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading\n}) => ({\n  books,\n  loading\n}); //export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\n\n\nconst mapDispatchToProps = {\n  booksLoaded,\n  booksRequested\n};\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/components/BookList/BookList.js"],"names":["React","Component","BookListItem","connect","WithBookStoreService","booksLoaded","booksRequested","compose","Spinner","BookList","componentDidMount","BookStoreService","getBooks","props","then","data","componentWillUnmount","render","books","loading","length","map","book","id","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,6BAAnC;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,eAA1C;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC7BS,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,gBAAgB,EAAC;AAACC,QAAAA;AAAD,OAAlB;AAA8BP,MAAAA;AAA9B,QAA6C,KAAKQ,KAAxD;AACAD,IAAAA,QAAQ,GAAGE,IAAX,CAAgBC,IAAI,IAAEV,WAAW,CAACU,IAAD,CAAjC;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,UAAM;AAACV,MAAAA;AAAD,QAAmB,KAAKO,KAA9B;AAEH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAmB,KAAKN,KAA9B;AACA,WAAOM,OAAO,IAAID,KAAK,CAACE,MAAN,KAAiB,CAA5B,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAAE;AAAA,+BAAkB,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AAAlB,SAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cAAhB;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAOH;;AAnB4B;;AAsBjC,MAAMC,eAAe,GAAG,CAAC;AAACN,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,MAAuB;AAC3CD,EAAAA,KAD2C;AACpCC,EAAAA;AADoC,CAAvB,CAAxB,C,CAGA;;;AACA,MAAMM,kBAAkB,GAAG;AACvBpB,EAAAA,WADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeC,OAAO,CAACH,oBAAoB,EAArB,EAAyBD,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAhC,CAAP,CAA8EhB,QAA9E,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../BookListItem/BookListItem\";\nimport {connect} from \"react-redux\";\nimport {WithBookStoreService} from \"../HOC/WithBookStoreService\";\nimport {booksLoaded, booksRequested} from \"../../actions\";\nimport {compose} from \"../../utils/compose\";\nimport './BookList.css'\nimport Spinner from \"../Spinner/Spinner\";\n\nclass BookList extends Component {\n    componentDidMount() {\n        const {BookStoreService:{getBooks}, booksLoaded} = this.props\n        getBooks().then(data=>booksLoaded(data))\n    }\n    componentWillUnmount() {\n        const {booksRequested} = this.props\n        \n    }\n\n    render() {\n        const {books, loading} = this.props\n        return loading && books.length === 0 ?\n            <Spinner/>\n            :\n            <ul className='book-list'>\n                {books.map(book=><li key={book.id}><BookListItem book={book}/></li>)}\n            </ul>\n        ;\n    }\n}\n\nconst mapStateToProps = ({books, loading}) => ({\n    books, loading\n})\n//export const booksLoaded = (payload) => ({type:'BOOKS_LOADED', payload})\nconst mapDispatchToProps = {\n    booksLoaded,\n    booksRequested\n}\n\nexport default compose(WithBookStoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);\n"]},"metadata":{},"sourceType":"module"}