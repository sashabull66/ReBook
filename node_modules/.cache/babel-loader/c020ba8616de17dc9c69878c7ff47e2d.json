{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = 0;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return state + 1;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nstore.dispatch({});\nconsole.log(store.getState());","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/index.js"],"names":["createStore","initialState","reducer","state","action","type","store","dispatch","console","log","getState"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAGA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AAJR;AAMH,CAPD;;AASA,MAAMG,KAAK,GAAGN,WAAW,CAACE,OAAD,CAAzB;AACAI,KAAK,CAACC,QAAN,CAAe,EAAf;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ","sourcesContent":["import {createStore} from \"redux\";\n\n\nconst initialState = 0\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD' :\n            return state + 1\n        default:\n            return state\n    }\n}\n\nconst store = createStore(reducer)\nstore.dispatch({})\nconsole.log(store.getState())"]},"metadata":{},"sourceType":"module"}