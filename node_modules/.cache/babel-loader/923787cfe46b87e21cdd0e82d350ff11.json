{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 0,\n  cartItemsTotal: 0\n};\n\nconst updateCartItems = (cartItems, item, index) => {\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(++index)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    name = book.name,\n    count = 0,\n    total = 0\n  } = item;\n  return {\n    id,\n    name,\n    count: count + 1,\n    total: book.price + total\n  };\n};\n\nconst updateOrderTotal = cartItems => {\n  console.log(cartItems);\n  return cartItems.reduce((finish, element) => finish + element.total, 0);\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const ID = action.payload; // clicked id\n\n      const currentBook = state.books.find(book => book.id === ID); // book from list\n\n      const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID); // >0 || -1\n\n      const bookInCart = state.cartItems[isBookInCartIndex]; // index || undefined\n\n      const data = updateCartItem(currentBook, bookInCart);\n      const newList = updateCartItems(state.cartItems, data, isBookInCartIndex);\n      return { ...state,\n        cartItems: newList,\n        orderTotal: updateOrderTotal(newList)\n      };\n\n    case 'BOOKS_DELETED_FROM_CART':\n      const booksID = action.payload; // clicked id\n\n      const newCartList = state.cartItems.filter(({\n        id\n      }) => id !== booksID);\n      return { ...state,\n        cartItems: newCartList,\n        orderTotal: updateOrderTotal(newCartList)\n      };\n\n    /* count: count + 1,\n         total: book.price + total,*/\n\n    case 'BOOK_DELETED_FROM_CART':\n      const bookID = action.payload; // clicked id\n\n      const newCarts = [...state.cartItems];\n      const deletedBooksGroup = newCarts.find(({\n        id\n      }) => id === bookID);\n      const getCount = deletedBooksGroup.count - 1;\n      const getTotal = deletedBooksGroup.total / deletedBooksGroup.count;\n      deletedBooksGroup.count = getCount;\n      deletedBooksGroup.total -= getTotal;\n      return { ...state,\n        cartItems: [...newCarts]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/redux-sandbox/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","cartItemsTotal","updateCartItems","item","index","slice","updateCartItem","book","id","name","count","total","price","updateOrderTotal","console","log","reduce","finish","element","reducer","state","action","type","payload","ID","currentBook","find","isBookInCartIndex","findIndex","bookInCart","data","newList","booksID","newCartList","filter","bookID","newCarts","deletedBooksGroup","getCount","getTotal"],"mappings":"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","sourcesContent":["const initialState = {\n    books: [],\n    loading: true,\n    error: null,\n    cartItems: [],\n    orderTotal: 0,\n    cartItemsTotal: 0\n}\n\nconst updateCartItems = (cartItems, item, index) => {\n    if (index === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, index),\n        item,\n        ...cartItems.slice(++index)\n    ]\n}\n\nconst updateCartItem = (book, item = {}) => {\n    const {id = book.id, name = book.name, count = 0, total = 0} = item\n    return {\n        id,\n        name,\n        count: count + 1,\n        total: book.price + total,\n    }\n}\n\nconst updateOrderTotal = (cartItems) => {\n    console.log(cartItems)\n    return cartItems.reduce((finish, element) => finish + element.total, 0)\n}\n\nexport const reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'FETCH_BOOKS_SUCCESS' :\n            return {\n                ...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_REQUEST' :\n            return {\n                ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_FAILURE' :\n            return {\n                ...state,\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n\n        case 'BOOK_ADDED_TO_CART' :\n            const ID = action.payload; // clicked id\n            const currentBook = state.books.find(book => book.id === ID) // book from list\n            const isBookInCartIndex = state.cartItems.findIndex(book => book.id === ID) // >0 || -1\n            const bookInCart = state.cartItems[isBookInCartIndex] // index || undefined\n            const data = updateCartItem(currentBook, bookInCart)\n            const newList = updateCartItems(state.cartItems, data, isBookInCartIndex)\n            return {\n                ...state,\n                cartItems: newList,\n                orderTotal: updateOrderTotal(newList)\n            }\n\n        case 'BOOKS_DELETED_FROM_CART' :\n            const booksID = action.payload; // clicked id\n            const newCartList = state.cartItems.filter(({id}) => id !== booksID);\n            return {\n                ...state,\n                cartItems: newCartList,\n                orderTotal: updateOrderTotal(newCartList)\n            }\n        /* count: count + 1,\n             total: book.price + total,*/\n        case 'BOOK_DELETED_FROM_CART' :\n            const bookID = action.payload; // clicked id\n            const newCarts = [...state.cartItems]\n            const deletedBooksGroup = newCarts.find(({id}) => id === bookID)\n            const getCount = deletedBooksGroup.count - 1\n            const getTotal = deletedBooksGroup.total / deletedBooksGroup.count\n            deletedBooksGroup.count = getCount\n            deletedBooksGroup.total -= getTotal\n            return {\n                ...state,\n                cartItems: [...newCarts]\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}